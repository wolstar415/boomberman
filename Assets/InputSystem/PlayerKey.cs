//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/InputSystem/PlayerKey.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerKey : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerKey()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerKey"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""4ebec80e-93f6-4ed2-bc83-7ad61c63744b"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""124d9318-ce44-4f04-8c24-847e9d97c7a0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Bomb"",
                    ""type"": ""Button"",
                    ""id"": ""021ed1c4-62b8-4b3c-b4b1-ac27c3be602e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PlayChat"",
                    ""type"": ""Button"",
                    ""id"": ""bca63e3b-f3cf-4cc7-9c9a-cb12daeec5e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WSAD"",
                    ""id"": ""f66a8186-1751-4705-a7e4-40f05daf238f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""55fdb8bf-d369-4cae-a88f-5f8958325e77"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d0ecae0c-06e0-4ac6-9c33-de3177ea1e79"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ed8e06d7-f413-4ace-93af-e30de15328f9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b2b38d49-5091-48e4-956f-e3e43c15a97d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""KeyboardArrow"",
                    ""id"": ""d6aabcc2-5f3d-43b6-92b7-1c062b15806b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3d3aa960-bdb0-4ec8-ad15-b216752bd22d"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""89cd0ada-f143-4f8c-a397-56d8d59505eb"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7aa813fb-59bc-45de-907a-a88b5459808b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""366d9e55-dd2e-44de-beb1-2c8702168a1f"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ee2a73e1-19bb-4fae-a493-873751582ab7"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Bomb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""023c929b-cfc4-4ff1-8aaf-890894d2ee6c"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PlayChat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UIChat"",
            ""id"": ""d1d727fd-b803-404b-8cb6-59afb3a1312b"",
            ""actions"": [
                {
                    ""name"": ""ChatEnd"",
                    ""type"": ""Button"",
                    ""id"": ""78cd115e-8f05-48a4-81ea-48c78ac174a0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Tab"",
                    ""type"": ""Button"",
                    ""id"": ""3e51f5e7-9fe4-4196-b731-49d9e2bd3815"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a9801de8-cc6c-4810-b707-897cc172d83b"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChatEnd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f210ee26-ed27-4765-9bbe-f74df1f3ab50"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChatEnd"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d27ed84f-5e08-4ac1-a942-af51b51e8d2a"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Tab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Bomb = m_Player.FindAction("Bomb", throwIfNotFound: true);
        m_Player_PlayChat = m_Player.FindAction("PlayChat", throwIfNotFound: true);
        // UIChat
        m_UIChat = asset.FindActionMap("UIChat", throwIfNotFound: true);
        m_UIChat_ChatEnd = m_UIChat.FindAction("ChatEnd", throwIfNotFound: true);
        m_UIChat_Tab = m_UIChat.FindAction("Tab", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Bomb;
    private readonly InputAction m_Player_PlayChat;
    public struct PlayerActions
    {
        private @PlayerKey m_Wrapper;
        public PlayerActions(@PlayerKey wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Bomb => m_Wrapper.m_Player_Bomb;
        public InputAction @PlayChat => m_Wrapper.m_Player_PlayChat;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Bomb.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBomb;
                @Bomb.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBomb;
                @Bomb.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBomb;
                @PlayChat.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayChat;
                @PlayChat.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayChat;
                @PlayChat.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPlayChat;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Bomb.started += instance.OnBomb;
                @Bomb.performed += instance.OnBomb;
                @Bomb.canceled += instance.OnBomb;
                @PlayChat.started += instance.OnPlayChat;
                @PlayChat.performed += instance.OnPlayChat;
                @PlayChat.canceled += instance.OnPlayChat;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UIChat
    private readonly InputActionMap m_UIChat;
    private IUIChatActions m_UIChatActionsCallbackInterface;
    private readonly InputAction m_UIChat_ChatEnd;
    private readonly InputAction m_UIChat_Tab;
    public struct UIChatActions
    {
        private @PlayerKey m_Wrapper;
        public UIChatActions(@PlayerKey wrapper) { m_Wrapper = wrapper; }
        public InputAction @ChatEnd => m_Wrapper.m_UIChat_ChatEnd;
        public InputAction @Tab => m_Wrapper.m_UIChat_Tab;
        public InputActionMap Get() { return m_Wrapper.m_UIChat; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIChatActions set) { return set.Get(); }
        public void SetCallbacks(IUIChatActions instance)
        {
            if (m_Wrapper.m_UIChatActionsCallbackInterface != null)
            {
                @ChatEnd.started -= m_Wrapper.m_UIChatActionsCallbackInterface.OnChatEnd;
                @ChatEnd.performed -= m_Wrapper.m_UIChatActionsCallbackInterface.OnChatEnd;
                @ChatEnd.canceled -= m_Wrapper.m_UIChatActionsCallbackInterface.OnChatEnd;
                @Tab.started -= m_Wrapper.m_UIChatActionsCallbackInterface.OnTab;
                @Tab.performed -= m_Wrapper.m_UIChatActionsCallbackInterface.OnTab;
                @Tab.canceled -= m_Wrapper.m_UIChatActionsCallbackInterface.OnTab;
            }
            m_Wrapper.m_UIChatActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ChatEnd.started += instance.OnChatEnd;
                @ChatEnd.performed += instance.OnChatEnd;
                @ChatEnd.canceled += instance.OnChatEnd;
                @Tab.started += instance.OnTab;
                @Tab.performed += instance.OnTab;
                @Tab.canceled += instance.OnTab;
            }
        }
    }
    public UIChatActions @UIChat => new UIChatActions(this);
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnBomb(InputAction.CallbackContext context);
        void OnPlayChat(InputAction.CallbackContext context);
    }
    public interface IUIChatActions
    {
        void OnChatEnd(InputAction.CallbackContext context);
        void OnTab(InputAction.CallbackContext context);
    }
}
